$(function() {
	var keyword = $('input[type=button]').click(function() {
		if ($(this).val() === '清除') {
		$("input:checkbox:checked[name='chkAttr']").each(function(i) {$(this).prop("checked", false);}); 
		$("input:checkbox:checked[name='chkType']").each(function(i) {$(this).prop("checked", false);}); 
		$("input:checkbox:checked[name='chkSocket']").each(function(i) {$(this).prop("checked", false);}); 
		$("input:radio[name='rdoCost']").filter("[value='全部']").prop('checked', true);
		$("input:checkbox:checked[name='chkStar']").each(function(i) {$(this).prop("checked", false);}); 
		$("input:checkbox:checked[name='chkGet']").each(function(i) {$(this).prop("checked", false);}); 
		$("input:text[name='txtCardNo']").val('');
		$('#result').empty().append([$('<div>無搜尋結果</div>')]);
			$('#result').show();
		return ;
	  }
	  var q = $(this).prev().val();
	  
	  var arrValue = new Array();  
	  $('input:checkbox:checked[name="chkAttr"]').each(function(i) { arrValue[i] = this.value; });
	  var chkAttrValue = GetArrToStr(arrValue);
	  arrValue = new Array(); 
	  $('input:checkbox:checked[name="chkType"]').each(function(i) { arrValue[i] = this.value; });
	  var chkTypeValue = GetArrToStr(arrValue);    
	  var rdoCostValue = $("input[name='rdoCost']:checked").val();
	  arrValue = new Array();
	  $('input:checkbox:checked[name="chkSocket"]').each(function(i) { arrValue[i] = this.value; });
	  var chkSocketValue = GetArrToStr(arrValue);  
	  arrValue = new Array(); 
	  $('input:checkbox:checked[name="chkStar"]').each(function(i) { arrValue[i] = this.value; });
	  var chkStarValue = GetArrToStr(arrValue); 
	  arrValue = new Array(); 
		$('input:checkbox:checked[name="chkGet"]').each(function(i) { arrValue[i] = this.value; });
	  var chkGetValue = GetArrToStr(arrValue); 

	  if ((chkAttrValue === '') 
		&& (chkTypeValue === '') 
		&& (rdoCostValue === '全部') 
		&& (chkSocketValue === '') 
		&& (chkStarValue === '') 
		&& (chkGetValue === '') 
		&& (q.trim() === '')) {
		$('#result').empty();
		$('#result').hide();
		return;  
	  }
	  
	  q = chkAttrValue + '##' + chkTypeValue + '##' + rdoCostValue + '##' + chkSocketValue + '##' + chkStarValue + '##' + chkGetValue + '##' + q;
	  //alert(q);
		process(q);
	}).prev().on('keydown', function(e) {
	  if (e.keyCode != 13) {
		return;
	  }
	  $(this).next().click();
	});

	function Icon(id) {
	  var book = 'http://i.imgur.com/yAeWlIP.png';
	  var url1 = id == -1 ? book : 'http://onepiece-treasurecruise.com/wp-content/uploads/f' + ('0000' + id).substr(-4) + '.png';
	  /*
	  var url2 = id == -1 ? book : 'http://onepiece-treasurecruise.com/wp-content/uploads/f' + ('00000' + id).substr(-5) + '.png';
	  */
	  var url2 = id == -1 ? book : 'https://gamewith.akamaized.net/article_tools/onepiece/gacha/f' + ('0000' + id).substr(-4) + '.png';
	  return '<img class="icon" src="' + url1 + '" onerror=\"this.src=\''+ url2 + '\'\">';
	}

	function process(q) {
		var arrq = q.split('##');
	  var data = $.map(DATA, function(o) {
			
		if (IsEqual(o.CARD_ATTR, arrq[0], 'CARD_ATTR')
		  && IsEqual(o.CARD_TYPE, arrq[1], 'CARD_TYPE')
		  && ChkCost(o.CARD_COST, arrq[2])
		  && IsEqual(o.SCOKET_COUNT, arrq[3], 'SCOKET_COUNT')
		  && IsEqual(o.STARS, arrq[4], 'SCOKET_COUNT')
		  && IsEqual(o.TO_GET, arrq[5], 'TO_GET')
		  && IsEqual(o.CARD_NO, arrq[6], 'CARD_NO')
		  ) {
			//alert(arrq[5]);
			 return o;
		}
	  });
	  
	  var sub = [];  
	  if (data.length) {  	
		sub = [
			$('<div>'),
		  $('<table style="width:80%; bo">'),      
		  ];
		sub = sub.concat($.map(data, function(o) {
			var arr = [
			$('<tr>'),
			$('<td width="5%" align="center" valign="middle" nowrap>ID</td>'), 
			$('<td width="5%" align="center" valign="middle" nowrap>圖像</td>'),
			$('<td width="5%" align="center" valign="middle" nowrap>屬性</td>'),
			$('<td width="6%" align="center" valign="middle" nowrap>Type</td>'),
			$('<td width="2%" align="center" valign="middle" nowrap>★數</td>'),
			$('<td width="5%" align="center" valign="middle" nowrap>cost</td>'),
			$('<td width="2%" align="center" valign="middle" nowrap>插槽數</td>'),
			$('<td width="7%" align="center" valign="middle" nowrap>最大等級</td>'),
			$('<td width="8%" align="center" valign="middle" nowrap>體力<br>攻擊<br>回復</td>'),
			$('<td width="7%" align="center" valign="middle" nowrap>技能CD</td>'),
			$('<td width="16%" align="center" valign="middle" nowrap>角色取得方式</td>'),
			$('<td width="16%" align="center" valign="middle" nowrap>必殺技<br>練等關卡</td>'),
			$('<td width="16%" align="center" valign="middle" nowrap>可練解放關卡</td>'),
			$('</tr>'),
			$('<tr>'),
			$('<td align="center" valign="middle">').text(o.CARD_NO),
			$('<td align="center" valign="middle">' + Icon(o.CARD_NO) + '</td>'),
			$(GetFontColor(o.CARD_ATTR)),
			$('<td align="center" valign="middle">').text(o.CARD_TYPE),
			$('<td align="center" valign="middle">').text(o.STARS),
			$('<td align="center" valign="middle">').text(o.CARD_COST),
			$('<td align="center" valign="middle">').text(o.SCOKET_COUNT),
			$('<td align="center" valign="middle">').text(o.MAX_LV),
			$(GetStatus(o.HP_MAX, o.ATK_MAX, o.CURE_MAX)),
			$(GetSkillCD(o.LV_1, o.LV_MAX)),
			$('<td>').text(o.TO_GET),
			$('<td>').text(o.BOOK),
			$('<td>').text(o.LIBERATION),
			$('</tr>'),    
			$(GetTR('必殺技', o.SKILL_DESC)),
			$(GetTR('船長效果', o.CAP_DESC)),
			$(GetTR('船員效果', o.CREW_DESC)),
		  ];
		  
		  return arr;
		}));  	
		
			sub = sub.concat($('</table>'));
		  sub = sub.concat($('</div>'));
	  } else {
		sub = [$('<div>無搜尋結果</div>')];
	  }
	  
	  $('#result').empty().append(sub);
		$('#result').show();
	}

	function GetFontColor(o) {
		
	  var bgcolor = "";
	  var fcolot = "";
		switch(o) {
		case '力':
		  bgcolor = "red";
		  fcolor = "white";
		  break;
		case '速':
		  bgcolor = "blue";
		  fcolor = "white";
		  break;
		case '技':
		  bgcolor = "green";
		  fcolor = "white";
		  break;
		case '心':
		  bgcolor = "yellow";
		  fcolor = "black";
		  break;
		case '知':
			bgcolor = "purple";
		  fcolor = "white";
		  break;
		}
	  return '<td bgcolor="' + bgcolor + '" align="center" valign="middle"><font color="' + fcolor + '">' + o + '</font></td>';
	}

	function GetSkillCD(LV1, LVMAX) {
		if (LV1 === "" && LVMAX === "")
		return '<td></td>';
	  else if (LVMAX === "")
		return '<td align="center" valign="middle">' + LV1 + '</td>';
	  else 
		return '<td align="center" valign="middle">' + LV1 + '<br> ↓ <br>' + LVMAX + '</td>';
	}

	function GetStatus(HP, ATK, CURE) {
		return '<td align="center" valign="middle">' + HP + '<br>' + ATK + '<br>' + CURE + '</td>';
	}

	function GetTR(TITLE, VALUE) {
		var str = '<tr>';
	  str += '<td colspan="3">' + TITLE + '</td>';
	  str += '<td colspan="10">' + VALUE + '</td>';
	  str += '</tr>';
		return str;
	}

	function IsEqual(A, B, kind) {
		if (B.trim() === '') return true;	 	
	  var arrB = B.split(' ');
	  for(i = 0;i < arrB.length; i++) {
		if (kind === 'CARD_NO') { 
		  var inputNo = ('0000' + arrB[i]).substr(-4)
		  if(A === inputNo && inputNo.length > 0) return true;
		} else if (arrB[i].length > 0) {    
		  if(A.indexOf(arrB[i]) > -1) return true;
		}
	  }    
		return false;
	}

	function ChkCost(A, kind) {	
		if (kind === '20以下')
			return parseInt(A) <= 20;
		else if(kind === '50以上')
			return parseInt(A) >= 50;
		else
			return true;
	}

	function GetArrToStr(A) {
		var rtnValue = '';
		for(i = 0;i < A.length; i++) {
		rtnValue = rtnValue + A[i] + ' ';
	  }
	  return rtnValue;
	}
})();